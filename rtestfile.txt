source(http://bioconductor.org/biocLite.R) 
biocLite() 
biocLite(baySeq) 
biocLite(DESeq2) 
biocLite(edgeR) 
library(DESeq2) 
library(baySeq) 
library(edgeR) 
all = read.delim(/var/www/subdirectories_for_interface/temp_output/analysis_Analysis/htseq_output/count_matrix.txt, header=TRUE, sep=t)
lib <- c(library_1,library_3) 
replicates <- c(1,2) 
groups <- list(NDE = c(1,1), DE = c(1,2))
cname <- all[,1] 
all <- all[,-1] 
all = as.matrix(all) 
CD <- new(countData, data = all, replicates = replicates, libsizes = as.integer(lib), groups = groups) 
library(parallel) 
CD@annotation <- as.data.frame(cname) 
cl <- NULL 
CDP.NBML <- getPriors.NB(CD, samplesize = 1000, estimation = QL, cl = cl) 
CDPost.NBML <- getLikelihoods.NB(CDP.NBML, pET = 'BIC', cl = cl) 
CDPost.NBML@estProps 
topCounts(CDPost.NBML, group=2) 
NBML.TPs <- getTPs(CDPost.NBML, group=2, TPs = 1:100) 
topCounts(CDPost.NBML, group=2)
blah <- topCounts(CDPost.NBML,group=DE,FDR=1) 
write.csv(blah, file=/var/www/subdirectories_for_interface/temp_output/analysis_Analysis/r_output/bayseq_de_analyzed_dataset_Analysis.csv) 
directory <- /var/www/subdirectories_for_interface/temp_output/analysis_Analysis/htseq_output 
sampleFiles <- c((grep(library_3,list.files(/var/www/subdirectories_for_interface/temp_output/analysis_Analysis/htseq_output),value=TRUE)),(grep(library_1,list.files(/var/www/subdirectories_for_interface/temp_output/analysis_Analysis/htseq_output),value=TRUE))) 
sampleCondition <- c(rep(C,1),rep(T,1)) 
sampleTable<- data.frame(sampleName=sampleFiles, fileName=sampleFiles, condition=sampleCondition) 
ddsHTSeq<-DESeqDataSetFromHTSeqCount(sampleTable=sampleTable, directory=directory, design=~condition) 
dds<-DESeq(ddsHTSeq) 
res<-results(dds) 
res<-res[order(res),] 
head(res) 
write.table (as.data.frame(res), file=/var/www/subdirectories_for_interface/temp_output/analysis_Analysis/r_output/results_deseq2.txt) 
library(edgeR) 
group <- c(1,2) 
y <- DGEList(counts=all, group= group) 
dge <- DGEList(counts=y, group=group, genes = cname ) 
dge <- calcNormFactors(dge) 
dge = estimateCommonDisp(dge) 
de.com = exactTest(dge)   
topTags(de.com)  
goodList = topTags(de.com, n=good) 
write.table (as.data.frame(goodList), file=/var/www/subdirectories_for_interface/temp_output/analysis_Analysis/r_output/edgeR.txt) 
